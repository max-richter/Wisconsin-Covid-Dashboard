{"version":3,"sources":["components/InfoSection.jsx","components/DataSection.jsx","components/NavbarSection.jsx","components/AppFooter.jsx","App.js","serviceWorker.js","index.js"],"names":["InfoSection","className","size","href","target","rel","React","Component","DataSection","state","countyData","negative","positive","deaths","posNew","negNew","testNew","name","newTests","baseURL","this","props","currCounty","axios","get","then","data","respData","temp","features","currLength","length","attributes","setState","prevState","Object","assign","NEGATIVE","POSITIVE","DEATHS","POS_NEW","NEG_NEW","TEST_NEW","NAME","catch","error","alert","toLocaleString","require","counties","NavbarSection","selectedCounty","onSelectHandler","eventKey","event","tempVal","innerHTML","DropdownButton","title","id","map","index","Dropdown","Item","toString","onSelect","as","AppFooter","useState","modal","setModal","toggle","Navbar","color","dark","Container","Button","onClick","Modal","isOpen","centered","ModalHeader","charCode","ModalBody","ModalFooter","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.ac0905bc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {GrResources, GrLink, GrPhone} from 'react-icons/gr';\r\n\r\n/**\r\n * This class contains all of the static resource links\r\n * NOTE: has no state and doesn't use any props\r\n */\r\nclass InfoSection extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row justify-content-center row-styled footer-container fade-in\">\r\n        <div className=\"col-md-5\">\r\n          <div className=\"card grid-card info-card-styling\">\r\n            <div className=\"card-heading\">\r\n              <div className=\"card-title-style\">\r\n                Wisconsin COVID-19 Resources{\" \"}\r\n                <GrResources className=\"icon-styled\" size=\"1.5rem\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"card-value fade-in-left\">\r\n              <span className=\"card-text-style\">\r\n                <ul>Have a question but don't want to talk to someone? Text COVID19 to 211-211 \r\n                  <GrPhone className=\"link-icon-style\" size=\"1.5rem\"/></ul>\r\n                <hr></hr>\r\n                <ul><a href=\"https://www.dhs.wisconsin.gov/covid-19/community-testing.htm\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  Find your local testing site</a><GrLink className=\"link-icon-style\" size=\"1.5rem\"/></ul>\r\n                <hr></hr>\r\n                <ul><a href=\"https://www.wihealthconnect.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  Free COVID-19 Self-Assessment</a><GrLink className=\"link-icon-style\" size=\"1.5rem\"/></ul>\r\n                <hr></hr>\r\n                <ul><a href=\"https://data.dhsgis.wi.gov/datasets/covid-19-historical-data-table/data?where=GEO%20%3D%20%27State%27\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  State Data</a><GrLink className=\"link-icon-style\" size=\"1.5rem\"/></ul>\r\n                <hr></hr>\r\n                <ul><a href=\"https://data.dhsgis.wi.gov/datasets/covid-19-historical-data-table/data?where=GEO%20%3D%20%27County%27\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  County Data</a><GrLink className=\"link-icon-style\" size=\"1.5rem\"/></ul>             \r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InfoSection;\r\n","import React from \"react\";\r\nimport InfoSection from \"./InfoSection\";\r\nimport axios from \"axios\";\r\nimport {\r\n  GrBug,\r\n  GrScorecard,\r\n  GrGroup,\r\n  GrStatusCritical,\r\n  GrStatusGood,\r\n  GrBarChart,\r\n} from \"react-icons/gr\";\r\n/**\r\n * class contains the core dashboard statistics\r\n * fetches data from DHS API and displays it\r\n */\r\nclass DataSection extends React.Component {\r\n  // keep track of object's state\r\n  state = {\r\n    countyData: {\r\n      negative: 0,\r\n      positive: 0,\r\n      deaths: 0,\r\n      posNew: 0,\r\n      negNew: 0,\r\n      testNew: 0,\r\n      name: \"\",\r\n      newTests: 0,\r\n    },\r\n  };\r\n\r\n  /**\r\n   * called initially as the component renders\r\n   * receives data from the default county of DANE\r\n   */\r\n  componentDidMount() {\r\n    let baseURL =\r\n      \"https://dhsgis.wi.gov/server/rest/services/DHS_COVID19/COVID19_WI/FeatureServer/1/query?where=NAME=%27\" +\r\n      this.props.currCounty +\r\n      \"%27&outFields=NEGATIVE,POSITIVE,DEATHS,POS_NEW,NEG_NEW,TEST_NEW,NAME&outSR=4326&f=json\";\r\n    axios\r\n      .get(baseURL)\r\n      .then((data) => {\r\n        let respData;\r\n        let temp = data.data.features;\r\n        let currLength = temp.length - 1;\r\n        respData = temp[currLength].attributes;\r\n        this.setState((prevState) => {\r\n          let countyData = Object.assign({}, prevState.countyData);\r\n          countyData[\"negative\"] = respData.NEGATIVE;\r\n          countyData[\"positive\"] = respData.POSITIVE;\r\n          countyData[\"deaths\"] = respData.DEATHS;\r\n          countyData[\"posNew\"] = respData.POS_NEW;\r\n          countyData[\"negNew\"] = respData.NEG_NEW;\r\n          countyData[\"testNew\"] = respData.TEST_NEW;\r\n          countyData[\"name\"] = respData.NAME;\r\n          countyData[\"newTests\"] = respData.TEST_NEW;\r\n\r\n          return { countyData };\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Something went wrong, please reload the page\");\r\n      });\r\n  }\r\n\r\n  /**\r\n   * gets new covid data as user selects a different county\r\n   * this function is identical to didMount(), the only difference\r\n   * is that this will be called only when the state updates\r\n   */\r\n  componentDidUpdate() {\r\n    if (this.state.countyData.name !== this.props.currCounty) {\r\n      let baseURL =\r\n        \"https://dhsgis.wi.gov/server/rest/services/DHS_COVID19/COVID19_WI/FeatureServer/1/query?where=NAME=%27\" +\r\n        this.props.currCounty +\r\n        \"%27&outFields=NEGATIVE,POSITIVE,DEATHS,POS_NEW,NEG_NEW,TEST_NEW,NAME&outSR=4326&f=json\";\r\n      axios\r\n        .get(baseURL)\r\n        .then((data) => {\r\n          let respData;\r\n          let temp = data.data.features;\r\n          let currLength = temp.length - 1;\r\n          respData = temp[currLength].attributes;\r\n          this.setState((prevState) => {\r\n            let countyData = Object.assign({}, prevState.countyData);\r\n            countyData[\"negative\"] = respData.NEGATIVE;\r\n            countyData[\"positive\"] = respData.POSITIVE;\r\n            countyData[\"deaths\"] = respData.DEATHS;\r\n            countyData[\"posNew\"] = respData.POS_NEW;\r\n            countyData[\"negNew\"] = respData.NEG_NEW;\r\n            countyData[\"testNew\"] = respData.TEST_NEW;\r\n            countyData[\"name\"] = respData.NAME;\r\n            countyData[\"newTests\"] = respData.TEST_NEW;\r\n            return { countyData };\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          alert(\"Something went wrong, please reload the page\");\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {/* FIRST ROW */}\r\n        <div className=\"row justify-content-center row-styled fade-in\">\r\n          <div className=\"col-lg-3 col-sm-6\">\r\n            <div className=\"card grid-card\">\r\n              <div className=\"card-heading\">\r\n                <div className=\"card-title-style\">\r\n                  Positive Cases (Cumulative){\" \"}\r\n                  <GrBug className=\"icon-styled\" size=\"1.5rem\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"card-value fade-in-left\">\r\n                <span className=\"card-data-style\">\r\n                  {this.state.countyData.positive.toLocaleString()}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-lg-3 col-sm-6\">\r\n            <div className=\"card grid-card\">\r\n              <div className=\"card-heading\">\r\n                <div className=\"card-title-style\">\r\n                  Negative Cases (Cumulative){\" \"}\r\n                  <GrScorecard className=\"icon-styled\" size=\"1.5rem\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card-value fade-in-left\">\r\n                <span className=\"card-data-style\">\r\n                  {this.state.countyData.negative.toLocaleString()}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-lg-3 col-sm-6\">\r\n            <div className=\"card grid-card\">\r\n              <div className=\"card-heading\">\r\n                <div className=\"card-title-style\">\r\n                  Total Deaths <GrGroup className=\"icon-styled\" size=\"1.5rem\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"card-value fade-in-left\">\r\n                <span className=\"card-data-style\">\r\n                  {this.state.countyData.deaths.toLocaleString()}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* SECOND ROW */}\r\n        <div className=\"row justify-content-center row-styled fade-in\">\r\n          <div className=\"col-lg-3 col-sm-6\">\r\n            <div className=\"card grid-card\">\r\n              <div className=\"card-heading\">\r\n                <div className=\"card-title-style\">\r\n                  New Positive Cases (Daily){\" \"}\r\n                  <GrStatusCritical className=\"icon-styled\" size=\"1.5rem\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"card-value fade-in-left\">\r\n                <span className=\"card-data-style\">\r\n                  {this.state.countyData.posNew.toLocaleString()}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-lg-3 col-sm-6\">\r\n            <div className=\"card grid-card\">\r\n              <div className=\"card-heading\">\r\n                <div className=\"card-title-style\">\r\n                  New Negative Cases (Daily){\" \"}\r\n                  <GrStatusGood className=\"icon-styled\" size=\"1.5rem\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"card-value fade-in-left\">\r\n                <span className=\"card-data-style\">\r\n                  {this.state.countyData.negNew.toLocaleString()}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-lg-3 col-sm-6\">\r\n            <div className=\"card grid-card\">\r\n              <div className=\"card-heading\">\r\n                <div className=\"card-title-style\">\r\n                  Tests Adminstered (Daily){\" \"}\r\n                  <GrBarChart className=\"icon-styled\" size=\"1.5rem\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"card-value fade-in-left\">\r\n                <span className=\"card-data-style\">\r\n                  {this.state.countyData.newTests.toLocaleString()}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* THIRD ROW  */}\r\n        <InfoSection />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSection;\r\n","import React from \"react\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DataSection from './DataSection';\r\nconst countyNames = require(\"./counties.json\");\r\n\r\n// array of wisconsin counties\r\nconst countyData = countyNames.counties;\r\n\r\n/**\r\n * Contains everything needed for the navbar\r\n */\r\nclass NavbarSection extends React.Component {\r\n  state = { selectedCounty: \"Dane\" };\r\n\r\n  // sets the state to the selected county\r\n  onSelectHandler = (eventKey, event) => {\r\n    let tempVal = event.target.innerHTML;\r\n    this.setState({ selectedCounty: tempVal });\r\n  };\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"container-fluid nav-width\">\r\n        <nav className=\"navbar navbar-dark\">\r\n          <a className=\"navbar-brand\" href=\"./\">Wisconsin COVID-19 Dashboard</a>\r\n          <span className=\"navbar-text ml-auto\">Showing Data for:</span>\r\n          <div className=\"dropdown\">\r\n            <DropdownButton\r\n              title={this.state.selectedCounty}\r\n              id=\"dropdown-menu-align-right\"\r\n            >\r\n              {countyData.map((data, index) => {\r\n                return (\r\n                  <Dropdown.Item\r\n                    eventKey={index.toString()}\r\n                    onSelect={this.onSelectHandler}\r\n                    className=\"dropdown-item\"\r\n                    as=\"button\"\r\n                  >\r\n                    {data}\r\n                  </Dropdown.Item>\r\n                );\r\n              })}\r\n            </DropdownButton>\r\n          </div>\r\n        </nav>\r\n        <DataSection currCounty={this.state.selectedCounty}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarSection;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Navbar,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\n\r\n/**\r\n * Footer of the app. Contains the \"About\" modal with information\r\n * about the data used and how to find the github repo\r\n */\r\nconst AppFooter = () => {\r\n  // keeps track of modal's state\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <div className=\"fixed-bottom footer-style\">\r\n      <Navbar color=\"blue\" dark>\r\n        <Container>\r\n          <Button className=\"footer-text\" color=\"info\" onClick={toggle}>\r\n            About\r\n          </Button>\r\n          <Modal isOpen={modal} toggle={toggle} centered=\"true\">\r\n            <ModalHeader toggle={toggle} charCode=\"X\">About</ModalHeader>\r\n            <ModalBody>\r\n              Hey! My name is Max. I go to UW-Madison and study Computer\r\n              Science. I created this tool to simplify the process of retrieving\r\n              the latest COVID-19 information for each county in Wisconsin.\r\n              <hr></hr>\r\n              The data shown on this site is fetched from the Department of\r\n              Health Services (WI). Due to the limitation of their API, new\r\n              COVID-19 data is released at 9am CDT each day. While the data on\r\n              this site is updated daily, there will always be a lag in\r\n              reporting.\r\n              <hr></hr>\r\n              I've open sourced the code to this site, so if you're curious to\r\n              check it out please click on the \"GitHub Repo\" link below!\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" onClick={toggle}>\r\n                Close\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                href=\"https://github.com/max-richter/Wisconsin-Covid-Dashboard\"\r\n                target=\"_blank\"\r\n                onClick={toggle}\r\n              >\r\n                GitHub Repo\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppFooter;\r\n","import React from 'react';\nimport NavbarSection from './components/NavbarSection';\nimport AppFooter from './components/AppFooter';\nimport './App.css';\n\n/**\n * Parent component (top of the tree)\n */\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <NavbarSection />\n        <AppFooter />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}